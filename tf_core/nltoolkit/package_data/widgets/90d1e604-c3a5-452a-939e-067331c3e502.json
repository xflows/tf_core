[
  {
    "model": "workflows.abstractwidget", 
    "fields": {
      "uid": "90d1e604-c3a5-452a-939e-067331c3e502", 
      "has_file": false, 
      "image": "", 
      "description": "Tokenize a string into its lines, optionally discarding blank lines.", 
      "category": "b0ce2ce4-16e8-4f9c-9874-238066c20fea", 
      "interaction_view": "", 
      "streaming_visualization_view": "", 
      "treeview_image": "", 
      "is_streaming": false, 
      "windows_queue": false, 
      "static_image": "token_word_image.png", 
      "action": "nltk_line_tokenizer", 
      "wsdl": "", 
      "name": "Line Tokenizer", 
      "package": "tf_core.nltoolkit", 
      "visualization_view": "", 
      "post_interact_action": "", 
      "wsdl_method": "", 
      "has_progress_bar": false, 
      "order": 1, 
      "interactive": false
    }
  }, 
  {
    "model": "workflows.abstractinput", 
    "fields": {
      "widget": "90d1e604-c3a5-452a-939e-067331c3e502", 
      "name": "Blank Lines", 
      "short_name": "bln", 
      "uid": "e68b25ab-30f2-468b-b4f4-1eda4b22bca3", 
      "default": "discard", 
      "required": true, 
      "multi": false, 
      "parameter_type": "select", 
      "variable": "blanklines", 
      "parameter": true, 
      "order": 1, 
      "description": "blanklines: Indicates how blank lines should be handled.  Options are:\r\n        - discard: strip blank lines out of the token list before returning it.\r\n           A line is considered blank if it contains only whitespace characters.\r\n        - keep: leave all blank lines in the token list.\r\n        - discard-eof: if the string ends with a newline, then do not generate\r\n           a corresponding token ``''`` after that newline."
    }
  }, 
  {
    "model": "workflows.abstractoutput", 
    "fields": {
      "widget": "90d1e604-c3a5-452a-939e-067331c3e502", 
      "name": "Tokenizer", 
      "short_name": "tkn", 
      "variable": "tokenizer", 
      "uid": "51f31143-2d1e-4605-8b62-c9895dc85bfe", 
      "order": 1, 
      "description": "A python dictionary containing the Tokenizer object and its arguments."
    }
  }, 
  {
    "model": "workflows.abstractoption", 
    "fields": {
      "uid": "770b5df2-d493-4e91-9b9b-d3c35949ee40", 
      "abstract_input": "e68b25ab-30f2-468b-b4f4-1eda4b22bca3", 
      "value": "discard-eof", 
      "name": "discard-eof"
    }
  }, 
  {
    "model": "workflows.abstractoption", 
    "fields": {
      "uid": "9ddcd23f-6e73-4e71-8a06-6de7007b4500", 
      "abstract_input": "e68b25ab-30f2-468b-b4f4-1eda4b22bca3", 
      "value": "discard", 
      "name": "discard"
    }
  }, 
  {
    "model": "workflows.abstractoption", 
    "fields": {
      "uid": "f3a99f3b-07a8-400f-acde-1ca663664b45", 
      "abstract_input": "e68b25ab-30f2-468b-b4f4-1eda4b22bca3", 
      "value": "keep", 
      "name": "keep"
    }
  }
]